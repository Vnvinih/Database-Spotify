MODELO FÍSICO E LÓGICO MYSQL:

1 - Tenha instalado o Mysql Workbench instalado em sua máquina. "https://dev.mysql.com/downloads/installer/" 

2 - vá na aba model e depois clique em Add Diagram para começar a criar seu modelo lógico

3 - depois de criado clique no botao direito em cima da tabela que você quer exportar e vá em COPY SQL TO CLIPBOARD

4 - Crie um database e cole

5- desse jeito você exporta as tabelas criadas em diagramas para código SQL(modelo físico)

6- faça com todas as suas tabelas e por fim crie os inserts e outros scripts


**# IMPORTAÇÃO DE DADOS DO MYSQL PARA O MONGODB PELO PROMPT:**

1 - Tenha o Mysql Workbench e o MongoDB instalado em sua máquina.

2 - também tenha instalado o MongoDB Database Tools para poder utilizar o mongoimport, e o Mongoshell para configurar o prompt no mongo compass.

3 - Salve o documento do seu banco de dados em formato csv ou json através do Mysql Workbench.

4 - No Prompt de comandos utilize: 
'mongoimport --db nomedobanco --collection nometabela --type json  --file caminhodoarquivo --jsonArray'
para importar os arquivos em JSON ou CSV exportado do Mysql Workbench.

5 - Utilize 'show dbs' para monstrar os bancos existentes.

6 - Utilize 'use + nome do banco de dados' para acessar o banco de dados.

7 - Utilize 'show collections' para visualizar as tabelas existentes.

8 - Utilize 'db.NomeDaTabela.find().pretty()' para visualizar os documentos Nosql. 

9- Desse jeito que você armazena os documentos em JSON para o MongoDB tirado do modelo relacional.

IMPORTAÇÃO DE DADOS DO MYSQL PARA O MONGO DB PELO MONGODBCOMPASS;

1-  Tenha o Mysql Workbench e o MongoDB instalado em sua máquina.

2 - Também tenha instalado o MongoDBcompass

3- Abra o MongoDBcompass crie um database e clique em add data para importar os dados exportados do workbenchMySQL salvo em JSON ou CSV.

4- desse jeito que você armazena os documentos em JSON para o MongoDB

MANIPULAÇÃO DE DADOS NO MONGODB:

2. Criar o Primeiro banco de dados e inserir Documentos:
O MongoDB organiza os dados em coleções, e os documentos são armazenados dentro dessas coleções:

show dbs;
use minhaBaseDeDados // Se não tiver um banco de dados com esse nome, o mongoDB irá criar automaticamente.

// Criar uma coleção chamada "usuarios"
db.createCollection("usuarios")

// Inserir um documento na coleção "usuarios"
db.usuarios.insertOne({
    nome: "João",
    idade: 30,
    cidade: "São Paulo"
})
Você pode inserir mais documentos na coleção usando o método insertOne() ou insertMany():

// Inserir vários documentos de uma vez
db.usuarios.insertMany([
    { nome: "Maria", idade: 25, cidade: "Rio de Janeiro" },
    { nome: "Pedro", idade: 35, cidade: "Belo Horizonte" }
])

4. Buscar Documentos:
Para buscar documentos, você pode usar o método find():

// Buscar todos os documentos na coleção "usuarios"
db.usuarios.find()

// Buscar documentos com condições específicas
db.usuarios.find({ cidade: "São Paulo" })

5. Remover Documentos:
Para remover documentos, use o método deleteOne() ou deleteMany():

// Remover um documento
db.usuarios.deleteOne({ nome: "João" })

// Remover todos os documentos que atendam a uma condição
db.usuarios.deleteMany({ idade: { $gt: 30 } }) // Remove usuários com idade maior que 30 anos

6. Alterar Documentos:
Para atualizar documentos, use o método updateOne() ou updateMany(), ou o método update() que foi descontinuado na versão 4.2 do MongoDB:

// Atualizar um documento
db.usuarios.updateOne(
    { nome: "Maria" }, // Condição de filtro
    { $set: { cidade: "São Paulo" } } // Novos valores
)

// Atualizar vários documentos
db.usuarios.updateMany(
    { cidade: "Rio de Janeiro" }, // Condição de filtro
    { $set: { cidade: "Niterói" } } // Novos valores
)

7. Encerrar a Conexão:
Quando terminar, você pode sair do console do MongoDB digitando:

quit()






